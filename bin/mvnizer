#!/usr/bin/env ruby

$:.unshift(File.expand_path(File.join(File.dirname(__FILE__), "..", "lib")))
require 'mvnizer'
require 'optparse'


help = <<HELP
Mvnizer bootstraps a Maven project without the pain of archetypes.

  mvnizer new <project_name>
    Creates a new project.  Example of valid project names:
      mvnizer new foo
      mvnizer new foo:war
      mvnizer new foo:1.0:war
      mvnizer new com.example:foo
      mvnizer new com.example:foo:war
      mvnizer new com.example:foo:1.0:war

  mvnizer add <coordinates>
    Adds a dependency to the project.

  mvnizer search <text>
    Searches for artefacts in the Maven central repository.
HELP

options = {}

opt_parser = OptionParser.new do |opts|
  opts.banner = help

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end

  opts.on("--version", "Display current version") do
    puts "Mvnizer " + Mvnizer::Version::STRING
    exit 0
  end

  opts.on("--docker", "Create Dockerfile.  Ignored if not `new' command.") do
    options[:docker] = true
  end

  opts.on("--main [MAIN_CLASS]", "Create a main class with name MAIN_CLASS.") do |main|
    options[:main] = main
  end

  opts.on("--logger", "Add logging dependencies.  Ignored if not `new' command.") do
    options[:logger] = true
  end
end

# Read command line options into `options` hash
opt_parser.parse!

if ARGV.size == 2
  options[:command] = ARGV[0]
  options[:name] = ARGV[1]
else
  puts "Incorrect parameters.  Please `mvnizer --help` for usage."
  exit(1)
end

Mvnizer::Mvnize.new.run(options)
